// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NewVoyager.Data;

#nullable disable

namespace NewVoyager.Migrations
{
    [DbContext(typeof(VoyagerContext))]
    [Migration("20231127145848_Update")]
    partial class Update
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NewVoyager.Models.Events", b =>
                {
                    b.Property<int>("EventID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EventID"));

                    b.Property<DateTime?>("DateFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateTo")
                        .HasColumnType("datetime2");

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrderNum")
                        .HasColumnType("int");

                    b.Property<int?>("TripsTripID")
                        .HasColumnType("int");

                    b.HasKey("EventID");

                    b.HasIndex("TripsTripID");

                    b.ToTable("Event", (string)null);
                });

            modelBuilder.Entity("NewVoyager.Models.Plans", b =>
                {
                    b.Property<int>("PlanID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlanID"));

                    b.Property<string>("Attendees")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlanName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VoyagerID")
                        .HasColumnType("int");

                    b.HasKey("PlanID");

                    b.HasIndex("VoyagerID");

                    b.ToTable("Plan", (string)null);
                });

            modelBuilder.Entity("NewVoyager.Models.Trips", b =>
                {
                    b.Property<int>("TripID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TripID"));

                    b.Property<DateTime?>("DateFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateTo")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PlanID")
                        .HasColumnType("int");

                    b.Property<string>("TripName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TripID");

                    b.HasIndex("PlanID");

                    b.ToTable("Trip", (string)null);
                });

            modelBuilder.Entity("NewVoyager.Models.Voyager", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Voyager", (string)null);
                });

            modelBuilder.Entity("NewVoyager.Models.Events", b =>
                {
                    b.HasOne("NewVoyager.Models.Trips", "Trips")
                        .WithMany("Events")
                        .HasForeignKey("TripsTripID");

                    b.Navigation("Trips");
                });

            modelBuilder.Entity("NewVoyager.Models.Plans", b =>
                {
                    b.HasOne("NewVoyager.Models.Voyager", "Voyager")
                        .WithMany("Plans")
                        .HasForeignKey("VoyagerID");

                    b.Navigation("Voyager");
                });

            modelBuilder.Entity("NewVoyager.Models.Trips", b =>
                {
                    b.HasOne("NewVoyager.Models.Plans", "Plan")
                        .WithMany("Trips")
                        .HasForeignKey("PlanID");

                    b.Navigation("Plan");
                });

            modelBuilder.Entity("NewVoyager.Models.Plans", b =>
                {
                    b.Navigation("Trips");
                });

            modelBuilder.Entity("NewVoyager.Models.Trips", b =>
                {
                    b.Navigation("Events");
                });

            modelBuilder.Entity("NewVoyager.Models.Voyager", b =>
                {
                    b.Navigation("Plans");
                });
#pragma warning restore 612, 618
        }
    }
}
